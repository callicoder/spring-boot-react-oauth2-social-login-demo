spring:
    datasource:
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://localhost:5432/oauth2
        username: alfredogdso
        password: 0279

    jpa:
      defer-datasource-initialization: true
      database: postgresql
      database-platform: org.hibernate.dialect.PostgreSQLDialect
      generate-ddl: false
      hibernate:
        ddl-auto: update
        naming:
          physical-strategy : org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      show-sql: false
      properties:
        '[hibernate.format_sql]' : true
        '[hibernate.generate_statistics]' : true
        '[persistence.schema-generation.scripts.create-target]' : create.sql

    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
              clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 121189305185277
              clientSecret: 42ffe5aa7379e8326387e0fe16f34132
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: 234b0a903fb3607d5d9f
              clientSecret: 4cecbfb2af2a2b94f160bae8accca94f511ae421
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
                #- user:email
                #- read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

# keys
rsa:
  private-key:
    classpath:certs/private.pem
  public-key:
    classpath:certs/public.pem


token:
  domain: localhost
  expiresHours: 3

cors:
  allowedOrigins: http://localhost:3000,http://localhost:8080

oauth:
  # After successfully authenticating with the OAuth2 Provider,
  # we'll be generating an auth token for the user and sending the token to the
  # redirectUri mentioned by the client in the /oauth2/authorize request.
  # We're not using cookies because they won't work well in mobile clients.
  authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
